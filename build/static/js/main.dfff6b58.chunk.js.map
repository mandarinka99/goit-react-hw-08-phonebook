{"version":3,"sources":["redux/auth/auth-reducer.js","redux/contacts/contacts-reducer.js","redux/store.js","Components/authNavigation/AuthNavigation.js","redux/auth/auth-selectors.js","Components/userMenu/UserMenu.js","Components/appBar/AppBar.js","Components/PrivateRoute.js","Components/PublicRoute.js","Components/spiner/Spiner.js","Components/App.js","index.js","Components/authNavigation/AuthNavigation.module.css","Components/userMenu/UserMenu.module.css","Components/container/Container.js","Components/container/Container.module.css","Components/appBar/AppBar.module.css","Components/spiner/Spiner.module.css","redux/contacts/contacts-actions.js","redux/auth/auth-operations.js"],"names":["authSlice","createSlice","name","initialState","user","email","token","isLoggedIn","isFetching","loading","extraReducers","register","pending","state","fulfilled","action","payload","rejected","logIn","logOut","fetchCurrentUser","items","createReducer","createContactsSuccess","editContactSuccess","map","contact","id","getContactsSuccess","_","deleteContactSuccess","filter","filterChange","getContactsRequest","getContactsError","createContactsRequest","createContactsError","deleteContactRequest","deleteContactError","editContactRequest","editContactError","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","contacts","contactsReducer","devTools","process","persistor","persistStore","AuthNavigation","className","s","nav","to","navLink","activeClassName","activeLink","getIsLoggedIn","getUserEmail","getIsFetching","UserMenu","dispatch","useDispatch","useSelector","userMenu","type","onClick","menuBut","AppBar","header","Container","PrivateRoute","children","redirectTo","props","console","log","PublicRoute","restricted","shouldRedirect","Spiner","spiner","color","height","width","timeout","RegisterPage","lazy","LoginPage","ContactsPage","App","useEffect","fallback","exact","path","ReactDOM","render","document","getElementById","module","exports","styles","container","createAction","axios","defaults","baseURL","headers","common","Authorization","createAsyncThunk","credentials","a","rejectWithValue","post","data","message","thunkAPI","getState","persistedToken","get"],"mappings":"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","file":"static/js/main.dfff6b58.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { register, logIn, logOut, fetchCurrentUser } from \"./auth-operations\";\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n  isFetching: false,\n  loading: false,\n};\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  extraReducers: {\n    [register.pending](state) {\n      state.loading = true;\n    },\n    [register.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n      state.loading = false;\n    },\n    [register.rejected](state) {\n      state.loading = false;\n    },\n    [logIn.pending](state) {\n      state.loading = true;\n    },\n    [logIn.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n      state.loading = false;\n    },\n    [logIn.rejected](state) {\n      state.loading = false;\n    },\n    [logOut.pending](state) {\n      state.loading = true;\n    },\n    [logOut.fulfilled](state) {\n      state.user = { name: null, email: null };\n      state.token = null;\n      state.isLoggedIn = false;\n      state.loading = false;\n    },\n    [logOut.rejected](state) {\n      state.loading = false;\n    },\n    [fetchCurrentUser.pending](state) {\n      state.isFetching = true;\n      state.loading = true;\n    },\n    [fetchCurrentUser.fulfilled](state, action) {\n      state.user = action.payload;\n      state.isLoggedIn = true;\n      state.isFetching = false;\n      state.loading = false;\n    },\n    [fetchCurrentUser.rejected](state) {\n      state.isFetching = false;\n      state.loading = false;\n    },\n  },\n});\n\nexport default authSlice.reducer;\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport {\n  filterChange,\n  getContactsSuccess,\n  deleteContactSuccess,\n  createContactsSuccess,\n  getContactsRequest,\n  getContactsError,\n  createContactsRequest,\n  createContactsError,\n  deleteContactRequest,\n  deleteContactError,\n  editContactRequest,\n  editContactSuccess,\n  editContactError,\n} from \"./contacts-actions\";\n\nconst items = createReducer([], {\n  [createContactsSuccess]: (state, { payload }) => [...state, payload],\n  [editContactSuccess]: (state, { payload }) =>\n    state.map((contact) => (contact.id === payload.id ? payload : contact)),\n  [getContactsSuccess]: (_, { payload }) => [...payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter((contact) => contact.id !== payload),\n});\n\nconst filter = createReducer(\"\", {\n  [filterChange]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [getContactsRequest]: () => true,\n  [getContactsSuccess]: () => false,\n  [getContactsError]: () => false,\n  [createContactsRequest]: () => true,\n  [createContactsSuccess]: () => false,\n  [createContactsError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n  [editContactRequest]: () => true,\n  [editContactSuccess]: () => false,\n  [editContactError]: () => false,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport logger from \"redux-logger\";\nimport authReducer from \"./auth/auth-reducer\";\n\nimport contactsReducer from \"./contacts/contacts-reducer\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\n\nexport const store = configureStore({\n  reducer: {\n    auth:  persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport const persistor = persistStore(store);\n","import { NavLink } from \"react-router-dom\";\nimport s from \"./AuthNavigation.module.css\";\n\nconst AuthNavigation = () => {\n  return (\n    <nav className={s.nav}>\n      <NavLink\n        to=\"/register\"\n        className={s.navLink}\n        activeClassName={s.activeLink}\n      >\n        Register\n      </NavLink>\n\n      <NavLink to=\"/login\" className={s.navLink} activeClassName={s.activeLink}>\n        Login\n      </NavLink>\n    </nav>\n  );\n};\n\nexport default AuthNavigation;\n","export const getIsLoggedIn = (state) => state.auth.isLoggedIn;\n\nexport const getUserEmail = (state) => state.auth.user.email;\n\nexport const getIsFetching = (state) => state.auth.isFetching;\n\nexport const getAuthLoading = (state) => state.auth.loading;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { getUserEmail } from \"../../redux/auth/auth-selectors\";\nimport { logOut } from \"../../redux/auth/auth-operations\";\nimport s from \"./UserMenu.module.css\";\n\nconst UserMenu = () => {\n  const dispatch = useDispatch();\n  const name = useSelector(getUserEmail);\n  return (\n    <div className={s.userMenu}>\n      <h2>Welcome, {name}!</h2>\n\n      <button\n        type=\"button\"\n        onClick={() => dispatch(logOut())}\n        className={s.menuBut}\n      >\n        Logout\n      </button>\n    </div>\n  );\n};\n\nexport default UserMenu;\n","import AuthNavigation from \"../authNavigation/AuthNavigation\";\nimport UserMenu from \"../userMenu/UserMenu\";\nimport Container from \"../container/Container\";\nimport { getIsLoggedIn } from \"../../redux/auth/auth-selectors\";\nimport { useSelector } from \"react-redux\";\nimport s from \"./AppBar.module.css\";\n\nconst AppBar = () => {\n  const isLoggedIn = useSelector(getIsLoggedIn);\n  return (\n    <header className={s.header}>\n      <Container>{isLoggedIn ? <UserMenu /> : <AuthNavigation />}</Container>\n    </header>\n  );\n};\n\nexport default AppBar;\n","import { useSelector } from \"react-redux\";\nimport { Redirect, Route } from \"react-router\";\nimport { getIsLoggedIn } from \"../redux/auth/auth-selectors\";\n\nconst PrivateRoute = ({ children, redirectTo = \"/\", ...props }) => {\n  const isLoggedIn = useSelector(getIsLoggedIn);\n  console.log(`isLoggedIn`, isLoggedIn, children);\n  return (\n    <Route {...props}>\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\n    </Route>\n  );\n};\n\nexport default PrivateRoute;\n","import { useSelector } from \"react-redux\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { getIsLoggedIn } from \"../redux/auth/auth-selectors\";\n\nconst PublicRoute = ({\n  children,\n  restricted = false,\n  redirectTo = \"/\",\n  ...props\n}) => {\n  const isLoggedIn = useSelector(getIsLoggedIn);\n  const shouldRedirect = isLoggedIn && restricted;\n  console.log(`shouldRedirect`, shouldRedirect);\n  return (\n    <Route {...props}>\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\n    </Route>\n  );\n};\n\nexport default PublicRoute;\n","import Loader from \"react-loader-spinner\";\nimport s from './Spiner.module.css';\n\nconst Spiner = () => {\n  return (\n    <div className={s.spiner}>\n      <Loader\n        type=\"Puff\"\n        color=\"#3f51b5\"\n        height={100}\n        width={100}\n        timeout={3000}\n      />\n    </div>\n  );\n}\n\nexport default Spiner;\n","import React, { useEffect, Suspense, lazy } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Switch, Redirect } from \"react-router-dom\";\nimport AppBar from \"./appBar/AppBar\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport PublicRoute from \"./PublicRoute\";\nimport Spiner from \"./spiner/Spiner\";\nimport { getIsFetching } from \"../redux/auth/auth-selectors\";\nimport { fetchCurrentUser } from \"../redux/auth/auth-operations\";\n\nconst RegisterPage = lazy(() => import(\"../pages/RegisterPage\"));\nconst LoginPage = lazy(() => import(\"../pages/LoginPage\"));\nconst ContactsPage = lazy(() => import(\"../pages/ContactsPage\"));\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const isFetching = useSelector(getIsFetching);\n\n  useEffect(() => {\n    dispatch(fetchCurrentUser());\n  }, [dispatch]);\n\n  return (\n    !isFetching && (\n      <>\n        <AppBar />\n\n        <Switch>\n          <Suspense fallback={<Spiner />}>\n            <PublicRoute\n              exact\n              path=\"/register\"\n              restricted\n              redirectTo=\"/contacts\"\n            >\n              <RegisterPage />\n            </PublicRoute>\n            <PublicRoute exact path=\"/login\" restricted redirectTo=\"/contacts\">\n              <LoginPage />\n            </PublicRoute>\n            <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\n              <ContactsPage />\n            </PrivateRoute>\n          </Suspense>\n        </Switch>\n      </>\n    )\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store, persistor } from \"./redux/store\";\nimport App from \"./Components/App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"AuthNavigation_nav__2SeZX\",\"navLink\":\"AuthNavigation_navLink__3UqOa\",\"activeLink\":\"AuthNavigation_activeLink__2SrAL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userMenu\":\"UserMenu_userMenu__2s9oi\",\"menuBut\":\"UserMenu_menuBut__1gzzH\"};","import styles from \"./Container.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst Container = ({ children }) => (\n  <div className={styles.container}>{children}</div>\n);\n\nContainer.propTypes = {\n  children: PropTypes.array.isRequired\n}\n\nexport default Container;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2nGXs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__wVuH6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spiner\":\"Spiner_spiner__3LHO5\"};","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const createContactsRequest = createAction(\n  \"contacts/createContactsRequest\"\n);\nexport const createContactsSuccess = createAction(\n  \"contacts/createContactsSuccess\"\n);\nexport const createContactsError = createAction(\"contacts/createContactsError\");\n\nexport const getContactsRequest = createAction(\"contacts/getContactsRequest\");\nexport const getContactsSuccess = createAction(\"contacts/getContactsSuccess\");\nexport const getContactsError = createAction(\"contacts/getContactsError\");\n\nexport const deleteContactRequest = createAction(\n  \"contacts/deleteContactsRequest\"\n);\nexport const deleteContactSuccess = createAction(\n  \"contacts/deleteContactsSuccess\"\n);\nexport const deleteContactError = createAction(\"contacts/deleteContactsError\");\n\nexport const editContactRequest = createAction(\"contacts/editContactsRequest\");\nexport const editContactSuccess = createAction(\"contacts/editContactsSuccess\");\nexport const editContactError = createAction(\"contacts/editContactsError\");\n\nexport const filterChange = createAction(\"contacts/filter\");\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = \"\";\n  },\n};\n\nexport const register = createAsyncThunk(\n  \"auth/register\",\n  async (credentials, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post(\"/users/signup\", credentials);\n      token.set(data.token);\n      return data;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const logIn = createAsyncThunk(\n  \"auth/login\",\n  async (credentials, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post(\"/users/login\", credentials);\n      token.set(data.token);\n      return data;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const logOut = createAsyncThunk(\n  \"auth/logout\",\n  async (_, { rejectWithValue }) => {\n    try {\n      await axios.post(\"/users/logout\");\n      token.unset();\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const fetchCurrentUser = createAsyncThunk(\n  \"auth/refresh\",\n  async (_, thunkAPI) => {\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n\n    if (persistedToken === null) {\n      return thunkAPI.rejectWithValue();\n    }\n    token.set(persistedToken);\n    try {\n      const { data } = await axios.get(\"/users/current\");\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n"],"sourceRoot":""}